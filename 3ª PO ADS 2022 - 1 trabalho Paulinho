
package com.ajaamor.mavenproject1;

import com.ajaamor.mavenproject1.SelectionSort.BubbleSort;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Digite o tamanho do vetor: ");
        int n = scanner.nextInt();

        int[] vetor = new int[n];
        System.out.println("Digite os elementos do vetor:");
        for (int i = 0; i < n; i++) {
            vetor[i] = scanner.nextInt();
        }

        System.out.println("Selecione o método de ordenação:");
        System.out.println("1 - inserção");
        System.out.println("2 - seleção");
        System.out.println("3 - bolha");
        int metodo = scanner.nextInt();

        long startTime = System.nanoTime();
        switch (metodo) {
            case 1:
                InsertionSort.sort(vetor);
                System.out.println("Método de ordenação: Inserção");
                break;
            case 2:
                SelectionSort.sort(vetor);
                System.out.println("Método de ordenação: Seleção");
                break;
            case 3:
                BubbleSort.sort(vetor);
                System.out.println("Método de ordenação: Bolha");
                break;
            default:
                System.out.println("Método inválido!");
                return;
        }
        long endTime = System.nanoTime();

        System.out.print("Vetor original: ");
        printArray(vetor);

        System.out.print("Vetor ordenado: ");
        printArray(vetor);

        System.out.println("Tempo de execução: " + (endTime - startTime));
    }

    public static void printArray(int[] vetor) {
        for (int i = 0; i < vetor.length; i++) {
            System.out.print(vetor[i] + " ");
        }
        System.out.println();
    }
}

class InsertionSort {
    public static void sort(int[] vetor) {
        int n = vetor.length;
        for (int i = 1; i < n; i++) {
            int key = vetor[i];
            int j = i - 1;
            while (j >= 0 && vetor[j] > key) {
                vetor[j + 1] = vetor[j];
                j--;
            }
            vetor[j + 1] = key;
        }
    }
}

class SelectionSort {
    public static void sort(int[] vetor) {
        int n = vetor.length;
        for (int i = 0; i < n - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < n; j++) {
                if (vetor[j] < vetor[minIndex]) {
                    minIndex = j;
                }
            }
            int temp = vetor[minIndex];
            vetor[minIndex] = vetor[i];
            vetor[i] = temp;
        }
    }


class BubbleSort {
    public static void sort(int[] vetor) {
}
}
}